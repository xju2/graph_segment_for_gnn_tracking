[build-system]
requires = ["scikit-build-core>=0.11.0", "pybind11", "cmake"]
build-backend = "scikit_build_core.build"


[project]
name = "graph_segment"
version = "0.0.1"
description = "Graph-based image segmentation"
readme = "README.md"
authors = [
  {name = "Xiangyang Ju", email = "xju@lbl.gov"},
]
license = "MIT"
keywords = ["graph", "segmentation", "tracking"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Topic :: Scientific/Engineering :: Physics",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3",
  "Programming Language :: C++",
]

[project.urls]
Homepage = "https://github.com/xju2/graph_segment_for_gnn_tracking"

[project.optional-dependencies]
dev = [
  "pre-commit",
  "ruff >= 0.9.7",
  "pytest",
  "pytest-cov",
  "cibuildwheel",
  "twine",
  "wheel",
]


[tool.cibuildwheel]
before-all = "uname -a"


[tool.scikit-build]
build.verbose = true
logging.level = "INFO"

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR09",    # Too many X
  "PLR2004",  # Magic comparison
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
